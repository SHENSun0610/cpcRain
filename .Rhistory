min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
}
# initialize
out_list <- vector('list', length(years_requested))
i = 1
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
# set the start and end dates for this particular year
if(i == 1){ #it's first year
start_date_i <- start_date
} else {
start_date_i <- ymd(paste(years_requested[i], 1, 1))
}
if(i == length(years_requested)){ #it's first year
end_date_i <- end_date
} else {
end_date_i <- ymd(paste(year, 12, 31))
}
year_i <- years_requested[i]
nc_fn_i <- paste0(download_folder, 'cpcRain_', year_i, '.nc')
# build the start and count indices
start <- c(which(lons == min(lon_lims)),
which(lats == min(lat_lims)),
min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
}
i = 2
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
# set the start and end dates for this particular year
if(i == 1){ #it's first year
start_date_i <- start_date
} else {
start_date_i <- ymd(paste(years_requested[i], 1, 1))
}
if(i == length(years_requested)){ #it's first year
end_date_i <- end_date
} else {
end_date_i <- ymd(paste(year, 12, 31))
}
year_i <- years_requested[i]
nc_fn_i <- paste0(download_folder, 'cpcRain_', year_i, '.nc')
# build the start and count indices
start <- c(which(lons == min(lon_lims)),
which(lats == min(lat_lims)),
min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
# set the start and end dates for this particular year
if(i == 1){ #it's first year
start_date_i <- start_date
} else {
start_date_i <- ymd(paste(years_requested[i], 1, 1))
}
if(i == length(years_requested)){ #it's first year
end_date_i <- end_date
} else {
end_date_i <- ymd(paste(year, 12, 31))
}
year_i <- years_requested[i]
nc_fn_i <- paste0(download_folder, 'cpcRain_', year_i, '.nc')
# build the start and count indices
start <- c(which(lons == min(lon_lims)),
which(lats == min(lat_lims)),
min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
out_list[[2]]
# initialize
out_list <- vector('list', length(years_requested))
# loop through each year separately
for(i in 1:length(years_requested)){
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
# set the start and end dates for this particular year
if(i == 1){ #it's first year
start_date_i <- start_date
} else {
start_date_i <- ymd(paste(years_requested[i], 1, 1))
}
if(i == length(years_requested)){ #it's first year
end_date_i <- end_date
} else {
end_date_i <- ymd(paste(year, 12, 31))
}
year_i <- years_requested[i]
nc_fn_i <- paste0(download_folder, 'cpcRain_', year_i, '.nc')
# build the start and count indices
start <- c(which(lons == min(lon_lims)),
which(lats == min(lat_lims)),
min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
}
rm(out_list)
out_list <- vector('list', length(years_requested))
i = 1
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
# set the start and end dates for this particular year
if(i == 1){ #it's first year
start_date_i <- start_date
} else {
start_date_i <- ymd(paste(years_requested[i], 1, 1))
}
if(i == length(years_requested)){ #it's first year
end_date_i <- end_date
} else {
end_date_i <- ymd(paste(year, 12, 31))
}
year_i <- years_requested[i]
nc_fn_i <- paste0(download_folder, 'cpcRain_', year_i, '.nc')
# build the start and count indices
start <- c(which(lons == min(lon_lims)),
which(lats == min(lat_lims)),
min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
i = 2
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
# set the start and end dates for this particular year
if(i == 1){ #it's first year
start_date_i <- start_date
} else {
start_date_i <- ymd(paste(years_requested[i], 1, 1))
}
if(i == length(years_requested)){ #it's first year
end_date_i <- end_date
} else {
end_date_i <- ymd(paste(year, 12, 31))
}
year_i <- years_requested[i]
nc_fn_i <- paste0(download_folder, 'cpcRain_', year_i, '.nc')
# build the start and count indices
start <- c(which(lons == min(lon_lims)),
which(lats == min(lat_lims)),
min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
i
i <- 3
i <- 2
seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
# loop through each year separately
for(i in 1:length(years_requested)){
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
# set the start and end dates for this particular year
if(i == 1){ #it's first year
start_date_i <- start_date
} else {
start_date_i <- ymd(paste(years_requested[i], 1, 1))
}
if(i == length(years_requested)){ #it's first year
end_date_i <- end_date
} else {
end_date_i <- ymd(paste(year, 12, 31))
}
year_i <- years_requested[i]
nc_fn_i <- paste0(download_folder, 'cpcRain_', year_i, '.nc')
# build the start and count indices
start <- c(which(lons == min(lon_lims)),
which(lats == min(lat_lims)),
min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
}
i
i=2
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(year_i, 12, 31)), 1) %>% as.numeric()
ymd(paste(years_requested[i], 1, 1))
ymd(paste(year_i, 12, 31))
# initialize
out_list <- vector('list', length(years_requested))
# loop through each year separately
for(i in 1:length(years_requested)){
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(years_requested[i], 12, 31)), 1) %>% as.numeric()
# set the start and end dates for this particular year
if(i == 1){ #it's first year
start_date_i <- start_date
} else {
start_date_i <- ymd(paste(years_requested[i], 1, 1))
}
if(i == length(years_requested)){ #it's first year
end_date_i <- end_date
} else {
end_date_i <- ymd(paste(year, 12, 31))
}
year_i <- years_requested[i]
nc_fn_i <- paste0(download_folder, 'cpcRain_', year_i, '.nc')
# build the start and count indices
start <- c(which(lons == min(lon_lims)),
which(lats == min(lat_lims)),
min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
}
lapply(out_list, abind::abind, along = 3)
lapply(out_list, abind::abind, along = 3) %>% dim()
?abind::abind
x <- array(c(1:3, 1:3, 1:3))
x
x <- array(1:3, 1:3, 1:3)
?array
x <- nc_array[1:3, 1:3, 1:3]
x
c(x, x)
?abind::abind(x, x)
?abind::abind(x, x, along = 3)
?abind::abind(x, x, along = 2)
abind::abind(x, x, along = 3)
abind::abind(x, x, along = 3) %>% dim()
dim(x)
out_list
out_list %>% dim()
lapply(out_list, dim)
unlist_out_list
unlist(out_list)
unlist(out_list) %>% dim()
abind::abind(out_list, along = 3)
abind::abind(out_list, along = 3) %>% dim()
lapply(out_list, dim)
out_list <- abind::abind(out_list, along = 3) %>% dim()
out_list %>% dimnames()
dimnames(out_list)
dimnames(nc_array)
for(i in 1:length(years_requested)){
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(years_requested[i], 12, 31)), 1) %>% as.numeric()
# set the start and end dates for this particular year
if(i == 1){ #it's first year
start_date_i <- start_date
} else {
start_date_i <- ymd(paste(years_requested[i], 1, 1))
}
if(i == length(years_requested)){ #it's first year
end_date_i <- end_date
} else {
end_date_i <- ymd(paste(year, 12, 31))
}
year_i <- years_requested[i]
nc_fn_i <- paste0(download_folder, 'cpcRain_', year_i, '.nc')
# build the start and count indices
start <- c(which(lons == min(lon_lims)),
which(lats == min(lat_lims)),
min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
}
# initialize
out_list <- vector('list', length(years_requested))
# loop through each year separately
for(i in 1:length(years_requested)){
# times depend on the year
times <- seq(ymd(paste(years_requested[i], 1, 1)), ymd(paste(years_requested[i], 12, 31)), 1) %>% as.numeric()
# set the start and end dates for this particular year
if(i == 1){ #it's first year
start_date_i <- start_date
} else {
start_date_i <- ymd(paste(years_requested[i], 1, 1))
}
if(i == length(years_requested)){ #it's first year
end_date_i <- end_date
} else {
end_date_i <- ymd(paste(year, 12, 31))
}
year_i <- years_requested[i]
nc_fn_i <- paste0(download_folder, 'cpcRain_', year_i, '.nc')
# build the start and count indices
start <- c(which(lons == min(lon_lims)),
which(lats == min(lat_lims)),
min(which(as_date(times) == start_date_i)))
end <- c(which(lons == max(lon_lims)),
which(lats == max(lat_lims)),
max(which(as_date(times) == end_date_i)))
count <- end - start + 1
nc <- nc_open(nc_fn_i)
nc_array <- ncvar_get(nc, varid = 'precip', start = start, count = count)
dimnames(nc_array)[[1]] <- lons[start[1]:end[1]]
dimnames(nc_array)[[2]] <- lats[start[2]:end[2]]
dimnames(nc_array)[[3]] <- times[start[3]:end[3]] %>% lubridate::as_date() %>% as.character()
# tidy data if tidy == TRUE else leave as array
if(tidy){
out_list[[i]] <- cpcMeltArray(nc_array)
} else {
out_list[[i]] <- nc_array
}
}
out_list[[1]] %>% dim()
out_list[[1]] %>% dimnames
out_list2 <- abind::abind(out_list, along = 3) %>% dim()
out_list2 <- abind::abind(out_list, along = 3) %>% dim()
out_list2
out_list2 <- abind::abind(out_list, along = 3)
dimnames(out_list2)
out_list <- abind::abind(out_list, along = 3)
rm(list = ls())
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all(".")
library(cpcRain)
?cpcReadNCDF
devtools::use_vignette(name = 'Introduction')
?cpcDownloadOneDay
?cpcQueryDateRange
?cpcQueryDateRange
devtools::document()
devtools::document()
devtools::document()
?cpcDownloadOneDay
?cpcQueryDateRange
devtools::document()
devtools::document()
devtools::document()
?cpcQueryDateRange
library(cpcRain)
knitr::opts_chunk$set(warnings = F, message = F)
dt1 <- cpcQueryDateRange(start_date = ymd('1998-12-24'),
end_date = ymd('1999-01-04'),
tidy = T)
dt1
dt1$download_success
dt1$precip_data
dcast(dt1$precip_data, date ~ lat + lon, value.var = 'prcp_mm')
str(dt1)
data.table::dcast(dt1$precip_data, date ~ lat + lon, value.var = 'prcp_mm')
data.table::dcast(dt1$precip_data, date ~ lat + lon)
dt1$precip_data
dt1$precip_data %>% data.table::dcast(date ~ lon + lat)
dt2 <- cpcQueryDateRange(start_date = ymd('1998-12-24'),
end_date = ymd('1999-01-04'),
tidy = F)
dt2$precip_data
dt2$precip_data %>% dim()
dt2$precip_data[, lapply(range)]
dt2$precip_data[, lapply(.SD, range)]
dt2$precip_data
dt1$precip_data[, lapply(.SD, range)]
dt2$precip_data %>% dim()
dimnames(dt2)
dimnames(dt2$precip_data)
dimnames(dt2$precip_data) %>% head()
lapply(dimnames(dt2$precip_data), head)
dt2$precip_data %>% cpcMeltArray
dt3 <- dt2$precip_data %>% cpcMeltArray
dt3 == dt1
dt3 == dt1$precip_data
dt3 == dt1$precip_data %>% colSums()
dt3 == dt1$precip_data %>% colMeans()
dt3 <- dt2$precip_data %>% cpcMeltArray
dt3
colMeans(dt3 == dt1$precip_data)
colMeans(dt3 == dt1$precip_data, na.rm = T)
?cpcYearToNCDF
devtools::document()
devtools::load_all(".")
?cpcYearToNCDF
ls()
getwd()
list.files()
for(year_i in 1997:2000){
cpcYearToNCDF(
year = year_i,
download_folder = getwd(),
empty_raw = TRUE,
overwrite = FALSE
)
}
getwd()
